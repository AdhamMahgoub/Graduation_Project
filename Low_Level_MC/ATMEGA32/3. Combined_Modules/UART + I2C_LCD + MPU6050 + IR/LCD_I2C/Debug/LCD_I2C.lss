
LCD_I2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000049a  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  0000049a  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000004c9  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000178  00000000  00000000  000004d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002627  00000000  00000000  0000064f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000afb  00000000  00000000  00002c76  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c4d  00000000  00000000  00003771  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000294  00000000  00000000  000043c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002e9  00000000  00000000  00004654  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000732  00000000  00000000  0000493d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000108  00000000  00000000  0000506f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000418  00000418  0000048c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00005178  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.Magneto_init 00000018  000003be  000003be  00000432  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.IR_Triggered 00000022  0000039c  0000039c  00000410  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.MPU6050_Init 00000086  0000019c  0000019c  00000210  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .progmemx.data 00000008  000000a8  000000a8  0000011c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 18 .text.main    00000050  0000028e  0000028e  00000302  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.DIO_voidSetPinDirection 000000ec  000000b0  000000b0  00000124  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.DIO_u8GetPinValue 0000006c  00000222  00000222  00000296  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.I2C_Init 00000008  00000408  00000408  0000047c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.I2C_Start 0000003a  000002de  000002de  00000352  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.I2C_Stop 0000000c  000003fc  000003fc  00000470  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.I2C_Start_Wait 00000034  00000318  00000318  0000038c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.I2C_Write 00000024  00000378  00000378  000003ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.UART_init 00000010  000003ec  000003ec  00000460  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.UART_send_byte 00000008  00000410  00000410  00000484  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.UART_send_string 0000002c  0000034c  0000034c  000003c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_fini 00000002  00000420  00000420  00000494  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__dummy_funcs_on_exit 00000002  00000422  00000422  00000496  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_simulator_exit 00000002  00000424  00000424  00000498  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.exit    00000016  000003d6  000003d6  0000044a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text._Exit   00000004  0000041c  0000041c  00000490  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
   8:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
   c:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  10:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  14:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  18:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  1c:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  20:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  24:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  28:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  2c:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  30:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  34:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  38:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  3c:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  40:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  44:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  48:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  4c:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>
  50:	0c 94 0c 02 	jmp	0x418	; 0x418 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	e4 e5       	ldi	r30, 0x54	; 84
  62:	f0 e0       	ldi	r31, 0x00	; 0
  64:	40 e0       	ldi	r20, 0x00	; 0
  66:	17 c0       	rjmp	.+46     	; 0x96 <__do_clear_bss+0x8>
  68:	b5 91       	lpm	r27, Z+
  6a:	a5 91       	lpm	r26, Z+
  6c:	35 91       	lpm	r19, Z+
  6e:	25 91       	lpm	r18, Z+
  70:	05 91       	lpm	r16, Z+
  72:	07 fd       	sbrc	r16, 7
  74:	0c c0       	rjmp	.+24     	; 0x8e <__do_clear_bss>
  76:	95 91       	lpm	r25, Z+
  78:	85 91       	lpm	r24, Z+
  7a:	ef 01       	movw	r28, r30
  7c:	f9 2f       	mov	r31, r25
  7e:	e8 2f       	mov	r30, r24
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 17       	cp	r26, r18
  86:	b3 07       	cpc	r27, r19
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0x20>
  8a:	fe 01       	movw	r30, r28
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_clear_bss+0x8>

0000008e <__do_clear_bss>:
  8e:	1d 92       	st	X+, r1
  90:	a2 17       	cp	r26, r18
  92:	b3 07       	cpc	r27, r19
  94:	e1 f7       	brne	.-8      	; 0x8e <__do_clear_bss>
  96:	e4 35       	cpi	r30, 0x54	; 84
  98:	f4 07       	cpc	r31, r20
  9a:	31 f7       	brne	.-52     	; 0x68 <__do_copy_data+0x8>
  9c:	0e 94 47 01 	call	0x28e	; 0x28e <main>
  a0:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <exit>

000000a4 <_exit>:
  a4:	f8 94       	cli

000000a6 <__stop_program>:
  a6:	ff cf       	rjmp	.-2      	; 0xa6 <__stop_program>

Disassembly of section .text:

00000418 <__bad_interrupt>:
 418:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.Magneto_init:

000003be <Magneto_init>:
#define QMC5883L_ADDR 0x0D
#define QMC5883L_REG_CONFIG 0x09
#define QMC5883L_REG_DATA 0x00

void Magneto_init() {
	I2C_Start(QMC5883L_ADDR << 1);			// Start and write SLA+W
 3be:	8a e1       	ldi	r24, 0x1A	; 26
 3c0:	0e 94 6f 01 	call	0x2de	; 0x2de <I2C_Start>
	I2C_Write(QMC5883L_REG_CONFIG);         // Write memory location address
 3c4:	89 e0       	ldi	r24, 0x09	; 9
 3c6:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Write(0x1D);						// Configure register A, set output data rate to 200Hz, set measurement range to 8G, set mode to continuous measurement
 3ca:	8d e1       	ldi	r24, 0x1D	; 29
 3cc:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Stop();                             // Stop I2C
 3d0:	0e 94 fe 01 	call	0x3fc	; 0x3fc <I2C_Stop>
 3d4:	08 95       	ret

Disassembly of section .text.IR_Triggered:

0000039c <IR_Triggered>:
 39c:	40 e0       	ldi	r20, 0x00	; 0
 39e:	67 e0       	ldi	r22, 0x07	; 7
 3a0:	82 e0       	ldi	r24, 0x02	; 2
 3a2:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_voidSetPinDirection>
 3a6:	67 e0       	ldi	r22, 0x07	; 7
 3a8:	82 e0       	ldi	r24, 0x02	; 2
 3aa:	0e 94 11 01 	call	0x222	; 0x222 <DIO_u8GetPinValue>
 3ae:	81 11       	cpse	r24, r1
 3b0:	03 c0       	rjmp	.+6      	; 0x3b8 <IR_Triggered+0x1c>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	08 95       	ret
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	08 95       	ret

Disassembly of section .text.MPU6050_Init:

0000019c <MPU6050_Init>:
float Xg=0,Yg=0,Zg=0;		/*	Real Values	*/


void MPU6050_Init()										/* Gyro initialization function */
{
	I2C_Init();
 19c:	0e 94 04 02 	call	0x408	; 0x408 <I2C_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a0:	2f e7       	ldi	r18, 0x7F	; 127
 1a2:	89 ea       	ldi	r24, 0xA9	; 169
 1a4:	93 e0       	ldi	r25, 0x03	; 3
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <MPU6050_Init+0xa>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <MPU6050_Init+0x14>
 1b0:	00 00       	nop

	_delay_ms(150);										/* Power up time >100ms */
	
	I2C_Start_Wait(0xD0);								/* Start with device write address */
 1b2:	80 ed       	ldi	r24, 0xD0	; 208
 1b4:	0e 94 8c 01 	call	0x318	; 0x318 <I2C_Start_Wait>

	I2C_Write(SMPLRT_DIV);								/* Write to sample rate register */
 1b8:	89 e1       	ldi	r24, 0x19	; 25
 1ba:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Write(0x07);									/* 1KHz sample rate */
 1be:	87 e0       	ldi	r24, 0x07	; 7
 1c0:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Stop();
 1c4:	0e 94 fe 01 	call	0x3fc	; 0x3fc <I2C_Stop>


	I2C_Start_Wait(0xD0);
 1c8:	80 ed       	ldi	r24, 0xD0	; 208
 1ca:	0e 94 8c 01 	call	0x318	; 0x318 <I2C_Start_Wait>
	I2C_Write(PWR_MGMT_1);								/* Write to power management register */
 1ce:	8b e6       	ldi	r24, 0x6B	; 107
 1d0:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Write(0x01);									/* X axis gyroscope reference frequency */
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Stop();
 1da:	0e 94 fe 01 	call	0x3fc	; 0x3fc <I2C_Stop>

	I2C_Start_Wait(0xD0);
 1de:	80 ed       	ldi	r24, 0xD0	; 208
 1e0:	0e 94 8c 01 	call	0x318	; 0x318 <I2C_Start_Wait>
	I2C_Write(CONFIG);									/* Write to Configuration register */
 1e4:	8a e1       	ldi	r24, 0x1A	; 26
 1e6:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Write(0x00);									/* Fs = 8KHz */
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Stop();
 1f0:	0e 94 fe 01 	call	0x3fc	; 0x3fc <I2C_Stop>

	I2C_Start_Wait(0xD0);
 1f4:	80 ed       	ldi	r24, 0xD0	; 208
 1f6:	0e 94 8c 01 	call	0x318	; 0x318 <I2C_Start_Wait>
	I2C_Write(GYRO_CONFIG);								/* Write to Gyro configuration register */
 1fa:	8b e1       	ldi	r24, 0x1B	; 27
 1fc:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Write(0x18);									/* Full scale range +/- 2000 degree/C */
 200:	88 e1       	ldi	r24, 0x18	; 24
 202:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Stop();
 206:	0e 94 fe 01 	call	0x3fc	; 0x3fc <I2C_Stop>

	I2C_Start_Wait(0xD0);
 20a:	80 ed       	ldi	r24, 0xD0	; 208
 20c:	0e 94 8c 01 	call	0x318	; 0x318 <I2C_Start_Wait>
	I2C_Write(INT_ENABLE);								/* Write to interrupt enable register */
 210:	88 e3       	ldi	r24, 0x38	; 56
 212:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Write(0x01);
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	0e 94 bc 01 	call	0x378	; 0x378 <I2C_Write>
	I2C_Stop();
 21c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <I2C_Stop>
 220:	08 95       	ret

Disassembly of section .text.main:

0000028e <main>:
*/


int main(void)
{
	UART_init();
 28e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <UART_init>
	MPU6050_Init();
 292:	0e 94 ce 00 	call	0x19c	; 0x19c <MPU6050_Init>
	extern float Xg, Yg, Zg;												//	Real Values of MPU6050
	extern float Acc_x,Acc_y,Acc_z,Temperature,Gyro_x,Gyro_y,Gyro_z;		//	Raw Values	

	/*	HMC	*/
	float Heading; 
	Magneto_init();
 296:	0e 94 df 01 	call	0x3be	; 0x3be <Magneto_init>
		
		#endif

		#if SELECTOR == 3		//	IR
		/*	///////////////////////////////////////////			IR			*///////////////////////////////////////////
				if (IR_Triggered())
 29a:	0e 94 ce 01 	call	0x39c	; 0x39c <IR_Triggered>
 29e:	89 2b       	or	r24, r25
 2a0:	31 f0       	breq	.+12     	; 0x2ae <main+0x20>
					UART_send_string("1\n\r");
 2a2:	68 ea       	ldi	r22, 0xA8	; 168
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	0e 94 a6 01 	call	0x34c	; 0x34c <UART_send_string>
 2ac:	05 c0       	rjmp	.+10     	; 0x2b8 <main+0x2a>
				else
					UART_send_string("0\n\r");
 2ae:	6c ea       	ldi	r22, 0xAC	; 172
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 a6 01 	call	0x34c	; 0x34c <UART_send_string>
 2b8:	2f ef       	ldi	r18, 0xFF	; 255
 2ba:	89 e6       	ldi	r24, 0x69	; 105
 2bc:	98 e1       	ldi	r25, 0x18	; 24
 2be:	21 50       	subi	r18, 0x01	; 1
 2c0:	80 40       	sbci	r24, 0x00	; 0
 2c2:	90 40       	sbci	r25, 0x00	; 0
 2c4:	e1 f7       	brne	.-8      	; 0x2be <main+0x30>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <main+0x3a>
 2c8:	00 00       	nop
 2ca:	2f ef       	ldi	r18, 0xFF	; 255
 2cc:	84 e3       	ldi	r24, 0x34	; 52
 2ce:	9c e0       	ldi	r25, 0x0C	; 12
 2d0:	21 50       	subi	r18, 0x01	; 1
 2d2:	80 40       	sbci	r24, 0x00	; 0
 2d4:	90 40       	sbci	r25, 0x00	; 0
 2d6:	e1 f7       	brne	.-8      	; 0x2d0 <main+0x42>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x4c>
 2da:	00 00       	nop
 2dc:	de cf       	rjmp	.-68     	; 0x29a <main+0xc>

Disassembly of section .text.DIO_voidSetPinDirection:

000000b0 <DIO_voidSetPinDirection>:
  b0:	84 30       	cpi	r24, 0x04	; 4
  b2:	08 f0       	brcs	.+2      	; 0xb6 <DIO_voidSetPinDirection+0x6>
  b4:	72 c0       	rjmp	.+228    	; 0x19a <DIO_voidSetPinDirection+0xea>
  b6:	68 30       	cpi	r22, 0x08	; 8
  b8:	08 f0       	brcs	.+2      	; 0xbc <DIO_voidSetPinDirection+0xc>
  ba:	6f c0       	rjmp	.+222    	; 0x19a <DIO_voidSetPinDirection+0xea>
  bc:	41 30       	cpi	r20, 0x01	; 1
  be:	a1 f5       	brne	.+104    	; 0x128 <DIO_voidSetPinDirection+0x78>
  c0:	81 30       	cpi	r24, 0x01	; 1
  c2:	89 f0       	breq	.+34     	; 0xe6 <DIO_voidSetPinDirection+0x36>
  c4:	28 f0       	brcs	.+10     	; 0xd0 <DIO_voidSetPinDirection+0x20>
  c6:	82 30       	cpi	r24, 0x02	; 2
  c8:	c9 f0       	breq	.+50     	; 0xfc <DIO_voidSetPinDirection+0x4c>
  ca:	83 30       	cpi	r24, 0x03	; 3
  cc:	11 f1       	breq	.+68     	; 0x112 <DIO_voidSetPinDirection+0x62>
  ce:	08 95       	ret
  d0:	2a b3       	in	r18, 0x1a	; 26
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_voidSetPinDirection+0x2c>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_voidSetPinDirection+0x28>
  e0:	82 2b       	or	r24, r18
  e2:	8a bb       	out	0x1a, r24	; 26
  e4:	08 95       	ret
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_voidSetPinDirection+0x42>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_voidSetPinDirection+0x3e>
  f6:	82 2b       	or	r24, r18
  f8:	87 bb       	out	0x17, r24	; 23
  fa:	08 95       	ret
  fc:	24 b3       	in	r18, 0x14	; 20
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <DIO_voidSetPinDirection+0x58>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <DIO_voidSetPinDirection+0x54>
 10c:	82 2b       	or	r24, r18
 10e:	84 bb       	out	0x14, r24	; 20
 110:	08 95       	ret
 112:	21 b3       	in	r18, 0x11	; 17
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_voidSetPinDirection+0x6e>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_voidSetPinDirection+0x6a>
 122:	82 2b       	or	r24, r18
 124:	81 bb       	out	0x11, r24	; 17
 126:	08 95       	ret
 128:	41 11       	cpse	r20, r1
 12a:	37 c0       	rjmp	.+110    	; 0x19a <DIO_voidSetPinDirection+0xea>
 12c:	81 30       	cpi	r24, 0x01	; 1
 12e:	91 f0       	breq	.+36     	; 0x154 <DIO_voidSetPinDirection+0xa4>
 130:	28 f0       	brcs	.+10     	; 0x13c <DIO_voidSetPinDirection+0x8c>
 132:	82 30       	cpi	r24, 0x02	; 2
 134:	d9 f0       	breq	.+54     	; 0x16c <DIO_voidSetPinDirection+0xbc>
 136:	83 30       	cpi	r24, 0x03	; 3
 138:	29 f1       	breq	.+74     	; 0x184 <DIO_voidSetPinDirection+0xd4>
 13a:	08 95       	ret
 13c:	2a b3       	in	r18, 0x1a	; 26
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_voidSetPinDirection+0x98>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	6a 95       	dec	r22
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_voidSetPinDirection+0x94>
 14c:	80 95       	com	r24
 14e:	82 23       	and	r24, r18
 150:	8a bb       	out	0x1a, r24	; 26
 152:	08 95       	ret
 154:	27 b3       	in	r18, 0x17	; 23
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_voidSetPinDirection+0xb0>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_voidSetPinDirection+0xac>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	87 bb       	out	0x17, r24	; 23
 16a:	08 95       	ret
 16c:	24 b3       	in	r18, 0x14	; 20
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_voidSetPinDirection+0xc8>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_voidSetPinDirection+0xc4>
 17c:	80 95       	com	r24
 17e:	82 23       	and	r24, r18
 180:	84 bb       	out	0x14, r24	; 20
 182:	08 95       	ret
 184:	21 b3       	in	r18, 0x11	; 17
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	02 c0       	rjmp	.+4      	; 0x190 <DIO_voidSetPinDirection+0xe0>
 18c:	88 0f       	add	r24, r24
 18e:	99 1f       	adc	r25, r25
 190:	6a 95       	dec	r22
 192:	e2 f7       	brpl	.-8      	; 0x18c <DIO_voidSetPinDirection+0xdc>
 194:	80 95       	com	r24
 196:	82 23       	and	r24, r18
 198:	81 bb       	out	0x11, r24	; 17
 19a:	08 95       	ret

Disassembly of section .text.DIO_u8GetPinValue:

00000222 <DIO_u8GetPinValue>:
 222:	84 30       	cpi	r24, 0x04	; 4
 224:	70 f5       	brcc	.+92     	; 0x282 <DIO_u8GetPinValue+0x60>
 226:	68 30       	cpi	r22, 0x08	; 8
 228:	70 f5       	brcc	.+92     	; 0x286 <DIO_u8GetPinValue+0x64>
 22a:	81 30       	cpi	r24, 0x01	; 1
 22c:	79 f0       	breq	.+30     	; 0x24c <DIO_u8GetPinValue+0x2a>
 22e:	28 f0       	brcs	.+10     	; 0x23a <DIO_u8GetPinValue+0x18>
 230:	82 30       	cpi	r24, 0x02	; 2
 232:	a9 f0       	breq	.+42     	; 0x25e <DIO_u8GetPinValue+0x3c>
 234:	83 30       	cpi	r24, 0x03	; 3
 236:	e1 f0       	breq	.+56     	; 0x270 <DIO_u8GetPinValue+0x4e>
 238:	28 c0       	rjmp	.+80     	; 0x28a <DIO_u8GetPinValue+0x68>
 23a:	89 b3       	in	r24, 0x19	; 25
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <DIO_u8GetPinValue+0x22>
 240:	95 95       	asr	r25
 242:	87 95       	ror	r24
 244:	6a 95       	dec	r22
 246:	e2 f7       	brpl	.-8      	; 0x240 <DIO_u8GetPinValue+0x1e>
 248:	81 70       	andi	r24, 0x01	; 1
 24a:	08 95       	ret
 24c:	86 b3       	in	r24, 0x16	; 22
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 c0       	rjmp	.+4      	; 0x256 <DIO_u8GetPinValue+0x34>
 252:	95 95       	asr	r25
 254:	87 95       	ror	r24
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <DIO_u8GetPinValue+0x30>
 25a:	81 70       	andi	r24, 0x01	; 1
 25c:	08 95       	ret
 25e:	83 b3       	in	r24, 0x13	; 19
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_u8GetPinValue+0x46>
 264:	95 95       	asr	r25
 266:	87 95       	ror	r24
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_u8GetPinValue+0x42>
 26c:	81 70       	andi	r24, 0x01	; 1
 26e:	08 95       	ret
 270:	80 b3       	in	r24, 0x10	; 16
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_u8GetPinValue+0x58>
 276:	95 95       	asr	r25
 278:	87 95       	ror	r24
 27a:	6a 95       	dec	r22
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_u8GetPinValue+0x54>
 27e:	81 70       	andi	r24, 0x01	; 1
 280:	08 95       	ret
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	08 95       	ret
 286:	8f ef       	ldi	r24, 0xFF	; 255
 288:	08 95       	ret
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	08 95       	ret

Disassembly of section .text.I2C_Init:

00000408 <I2C_Init>:
 408:	11 b8       	out	0x01, r1	; 1
 40a:	80 e2       	ldi	r24, 0x20	; 32
 40c:	80 b9       	out	0x00, r24	; 0
 40e:	08 95       	ret

Disassembly of section .text.I2C_Start:

000002de <I2C_Start>:
 2de:	94 ea       	ldi	r25, 0xA4	; 164
 2e0:	96 bf       	out	0x36, r25	; 54
 2e2:	06 b6       	in	r0, 0x36	; 54
 2e4:	07 fe       	sbrs	r0, 7
 2e6:	fd cf       	rjmp	.-6      	; 0x2e2 <I2C_Start+0x4>
 2e8:	91 b1       	in	r25, 0x01	; 1
 2ea:	98 7f       	andi	r25, 0xF8	; 248
 2ec:	98 30       	cpi	r25, 0x08	; 8
 2ee:	71 f4       	brne	.+28     	; 0x30c <I2C_Start+0x2e>
 2f0:	83 b9       	out	0x03, r24	; 3
 2f2:	84 e8       	ldi	r24, 0x84	; 132
 2f4:	86 bf       	out	0x36, r24	; 54
 2f6:	06 b6       	in	r0, 0x36	; 54
 2f8:	07 fe       	sbrs	r0, 7
 2fa:	fd cf       	rjmp	.-6      	; 0x2f6 <I2C_Start+0x18>
 2fc:	81 b1       	in	r24, 0x01	; 1
 2fe:	88 7f       	andi	r24, 0xF8	; 248
 300:	88 31       	cpi	r24, 0x18	; 24
 302:	31 f0       	breq	.+12     	; 0x310 <I2C_Start+0x32>
 304:	80 32       	cpi	r24, 0x20	; 32
 306:	31 f4       	brne	.+12     	; 0x314 <I2C_Start+0x36>
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	08 95       	ret
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	08 95       	ret
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	08 95       	ret
 314:	83 e0       	ldi	r24, 0x03	; 3
 316:	08 95       	ret

Disassembly of section .text.I2C_Stop:

000003fc <I2C_Stop>:
 3fc:	84 e9       	ldi	r24, 0x94	; 148
 3fe:	86 bf       	out	0x36, r24	; 54
 400:	06 b6       	in	r0, 0x36	; 54
 402:	04 fc       	sbrc	r0, 4
 404:	fd cf       	rjmp	.-6      	; 0x400 <__EEPROM_REGION_LENGTH__>
 406:	08 95       	ret

Disassembly of section .text.I2C_Start_Wait:

00000318 <I2C_Start_Wait>:
 318:	cf 93       	push	r28
 31a:	c8 2f       	mov	r28, r24
 31c:	84 ea       	ldi	r24, 0xA4	; 164
 31e:	86 bf       	out	0x36, r24	; 54
 320:	06 b6       	in	r0, 0x36	; 54
 322:	07 fe       	sbrs	r0, 7
 324:	fd cf       	rjmp	.-6      	; 0x320 <I2C_Start_Wait+0x8>
 326:	81 b1       	in	r24, 0x01	; 1
 328:	88 7f       	andi	r24, 0xF8	; 248
 32a:	88 30       	cpi	r24, 0x08	; 8
 32c:	b9 f7       	brne	.-18     	; 0x31c <I2C_Start_Wait+0x4>
 32e:	c3 b9       	out	0x03, r28	; 3
 330:	84 e8       	ldi	r24, 0x84	; 132
 332:	86 bf       	out	0x36, r24	; 54
 334:	06 b6       	in	r0, 0x36	; 54
 336:	07 fe       	sbrs	r0, 7
 338:	fd cf       	rjmp	.-6      	; 0x334 <I2C_Start_Wait+0x1c>
 33a:	81 b1       	in	r24, 0x01	; 1
 33c:	88 7f       	andi	r24, 0xF8	; 248
 33e:	88 31       	cpi	r24, 0x18	; 24
 340:	19 f0       	breq	.+6      	; 0x348 <I2C_Start_Wait+0x30>
 342:	0e 94 fe 01 	call	0x3fc	; 0x3fc <I2C_Stop>
 346:	ea cf       	rjmp	.-44     	; 0x31c <I2C_Start_Wait+0x4>
 348:	cf 91       	pop	r28
 34a:	08 95       	ret

Disassembly of section .text.I2C_Write:

00000378 <I2C_Write>:
 378:	83 b9       	out	0x03, r24	; 3
 37a:	84 e8       	ldi	r24, 0x84	; 132
 37c:	86 bf       	out	0x36, r24	; 54
 37e:	06 b6       	in	r0, 0x36	; 54
 380:	07 fe       	sbrs	r0, 7
 382:	fd cf       	rjmp	.-6      	; 0x37e <I2C_Write+0x6>
 384:	81 b1       	in	r24, 0x01	; 1
 386:	88 7f       	andi	r24, 0xF8	; 248
 388:	88 32       	cpi	r24, 0x28	; 40
 38a:	21 f0       	breq	.+8      	; 0x394 <I2C_Write+0x1c>
 38c:	80 33       	cpi	r24, 0x30	; 48
 38e:	21 f4       	brne	.+8      	; 0x398 <I2C_Write+0x20>
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	08 95       	ret
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	08 95       	ret
 398:	82 e0       	ldi	r24, 0x02	; 2
 39a:	08 95       	ret

Disassembly of section .text.UART_init:

000003ec <UART_init>:

u8 UART_RecieveData(void)				//A function to Receive Data
{
	while(GET_BIT(UCSRA,RXC)==0);	//wait until all data is received
	return UDR;
}
 3ec:	10 bc       	out	0x20, r1	; 32
 3ee:	8f ec       	ldi	r24, 0xCF	; 207
 3f0:	89 b9       	out	0x09, r24	; 9
 3f2:	88 e1       	ldi	r24, 0x18	; 24
 3f4:	8a b9       	out	0x0a, r24	; 10
 3f6:	86 e8       	ldi	r24, 0x86	; 134
 3f8:	80 bd       	out	0x20, r24	; 32
 3fa:	08 95       	ret

Disassembly of section .text.UART_send_byte:

00000410 <UART_send_byte>:

void UART_send_byte(u8 Data)			//A function to Transmit Char (1 Byte)
{
	while(GET_BIT(UCSRA,UDRE)==0);	//Wait until all data is transmitted
 410:	5d 9b       	sbis	0x0b, 5	; 11
 412:	fe cf       	rjmp	.-4      	; 0x410 <UART_send_byte>
	UDR=Data;
 414:	8c b9       	out	0x0c, r24	; 12
 416:	08 95       	ret

Disassembly of section .text.UART_send_string:

0000034c <UART_send_string>:

u8 UART_RecieveData(void)				//A function to Receive Data
{
	while(GET_BIT(UCSRA,RXC)==0);	//wait until all data is received
	return UDR;
}
 34c:	cf 92       	push	r12
 34e:	df 92       	push	r13
 350:	ef 92       	push	r14
 352:	6b 01       	movw	r12, r22
 354:	e8 2e       	mov	r14, r24
 356:	06 c0       	rjmp	.+12     	; 0x364 <UART_send_string+0x18>
 358:	9f ef       	ldi	r25, 0xFF	; 255
 35a:	c9 1a       	sub	r12, r25
 35c:	d9 0a       	sbc	r13, r25
 35e:	e9 0a       	sbc	r14, r25
 360:	0e 94 08 02 	call	0x410	; 0x410 <UART_send_byte>
 364:	f6 01       	movw	r30, r12
 366:	84 91       	lpm	r24, Z
 368:	e7 fc       	sbrc	r14, 7
 36a:	80 81       	ld	r24, Z
 36c:	81 11       	cpse	r24, r1
 36e:	f4 cf       	rjmp	.-24     	; 0x358 <UART_send_string+0xc>
 370:	ef 90       	pop	r14
 372:	df 90       	pop	r13
 374:	cf 90       	pop	r12
 376:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000420 <_fini>:
 420:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000422 <__funcs_on_exit>:
 422:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000424 <__simulator_exit>:
 424:	08 95       	ret

Disassembly of section .text.exit:

000003d6 <exit>:
 3d6:	ec 01       	movw	r28, r24
 3d8:	0e 94 11 02 	call	0x422	; 0x422 <__funcs_on_exit>
 3dc:	0e 94 10 02 	call	0x420	; 0x420 <_fini>
 3e0:	ce 01       	movw	r24, r28
 3e2:	0e 94 12 02 	call	0x424	; 0x424 <__simulator_exit>
 3e6:	ce 01       	movw	r24, r28
 3e8:	0e 94 0e 02 	call	0x41c	; 0x41c <_Exit>

Disassembly of section .text._Exit:

0000041c <_Exit>:
 41c:	0e 94 52 00 	call	0xa4	; 0xa4 <_exit>
